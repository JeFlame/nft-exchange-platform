{
  "address": "0x6Ba94a2FB255ecAE2Eec55ACf84326af9459636e",
  "abi": [
    {
      "inputs": [],
      "name": "IncreasePrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidOrder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPrice",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NeedApproval",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "List",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Purchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "Update",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "list",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "nftList",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc4c7b7e68110cb518e0ba3c2f5c63036f8e19170e5e61ea76709fa9a56720bf9",
  "receipt": {
    "to": null,
    "from": "0xe84680C37f320c56d9F26E549155D33Bd412e7E3",
    "contractAddress": "0x6Ba94a2FB255ecAE2Eec55ACf84326af9459636e",
    "transactionIndex": 31,
    "gasUsed": "648035",
    "logsBloom": "0x
    "blockHash": "0x989c2a809095a55e242064a45f1252701eee3d5889f069f24ef363d32172cc66",
    "transactionHash": "0xc4c7b7e68110cb518e0ba3c2f5c63036f8e19170e5e61ea76709fa9a56720bf9",
    "logs": [],
    "blockNumber": 6367971,
    "cumulativeGasUsed": "4913421",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cf5fbf8a3498459a2f7b960991673fd8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IncreasePrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidOrder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NeedApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"List\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Revoke\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"Update\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"list\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTExchangePlatform.sol\":\"NFTExchangePlatform\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/NFTExchangePlatform.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Compatible with OpenZeppelin Contracts ^5.0.0\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\\\";\\n\\ncontract NFTExchangePlatform is IERC721Receiver {\\n\\tstruct Order {\\n\\t\\taddress owner;\\n\\t\\tuint256 price;\\n\\t}\\n\\n\\tmapping(address => mapping(uint256 => Order)) public nftList;\\n\\n\\tevent List(\\n\\t\\taddress indexed seller,\\n\\t\\taddress indexed nftAddr,\\n\\t\\tuint256 indexed tokenId,\\n\\t\\tuint256 price\\n\\t);\\n\\tevent Purchase(\\n\\t\\taddress indexed buyer,\\n\\t\\taddress indexed nftAddr,\\n\\t\\tuint256 indexed tokenId,\\n\\t\\tuint256 price\\n\\t);\\n\\tevent Revoke(\\n\\t\\taddress indexed seller,\\n\\t\\taddress indexed nftAddr,\\n\\t\\tuint256 indexed tokenId\\n\\t);\\n\\tevent Update(\\n\\t\\taddress indexed seller,\\n\\t\\taddress indexed nftAddr,\\n\\t\\tuint256 indexed tokenId,\\n\\t\\tuint256 newPrice\\n\\t);\\n\\n\\terror NeedApproval();\\n\\terror InvalidPrice();\\n\\terror TransferFailed();\\n\\terror IncreasePrice();\\n\\terror InvalidOrder();\\n\\terror NotOwner();\\n\\n\\treceive() external payable {}\\n\\n\\tfallback() external payable {}\\n\\n\\tfunction list(address _nftAddr, uint256 _tokenId, uint256 _price) public {\\n\\t\\tIERC721 _nft = IERC721(_nftAddr);\\n\\t\\tif (_nft.getApproved(_tokenId) != address(this)) {\\n\\t\\t\\trevert NeedApproval();\\n\\t\\t}\\n\\t\\tif (_price <= 0) {\\n\\t\\t\\trevert InvalidPrice();\\n\\t\\t}\\n\\n\\t\\tOrder storage _order = nftList[_nftAddr][_tokenId];\\n\\t\\t_order.owner = msg.sender;\\n\\t\\t_order.price = _price;\\n\\n\\t\\t_nft.safeTransferFrom(msg.sender, address(this), _tokenId);\\n\\n\\t\\temit List(msg.sender, _nftAddr, _tokenId, _price);\\n\\t}\\n\\n\\tfunction purchase(address _nftAddr, uint256 _tokenId) public payable {\\n\\t\\tOrder storage _order = nftList[_nftAddr][_tokenId];\\n\\t\\tif (_order.price <= 0) {\\n\\t\\t\\trevert InvalidPrice();\\n\\t\\t}\\n\\t\\tif (msg.value < _order.price) {\\n\\t\\t\\trevert IncreasePrice();\\n\\t\\t}\\n\\n\\t\\tIERC721 _nft = IERC721(_nftAddr);\\n\\t\\tif (_nft.ownerOf(_tokenId) != address(this)) {\\n\\t\\t\\trevert InvalidOrder();\\n\\t\\t}\\n\\n\\t\\t_nft.safeTransferFrom(address(this), msg.sender, _tokenId);\\n\\n\\t\\t(bool success, ) = payable(_order.owner).call{ value: _order.price }(\\n\\t\\t\\t\\\"\\\"\\n\\t\\t);\\n\\t\\tif (!success) {\\n\\t\\t\\trevert TransferFailed();\\n\\t\\t}\\n\\n\\t\\t(bool successRefund, ) = payable(msg.sender).call{\\n\\t\\t\\tvalue: msg.value - _order.price\\n\\t\\t}(\\\"\\\");\\n\\t\\tif (!successRefund) {\\n\\t\\t\\trevert TransferFailed();\\n\\t\\t}\\n\\n\\t\\tdelete nftList[_nftAddr][_tokenId];\\n\\n\\t\\temit Purchase(msg.sender, _nftAddr, _tokenId, _order.price);\\n\\t}\\n\\n\\tfunction revoke(address _nftAddr, uint256 _tokenId) public {\\n\\t\\tOrder storage _order = nftList[_nftAddr][_tokenId];\\n\\t\\tif (_order.owner != msg.sender) {\\n\\t\\t\\trevert NotOwner();\\n\\t\\t}\\n\\n\\t\\tIERC721 _nft = IERC721(_nftAddr);\\n\\t\\tif (_nft.ownerOf(_tokenId) != address(this)) {\\n\\t\\t\\trevert InvalidOrder();\\n\\t\\t}\\n\\n\\t\\t_nft.safeTransferFrom(address(this), msg.sender, _tokenId);\\n\\t\\tdelete nftList[_nftAddr][_tokenId];\\n\\n\\t\\temit Revoke(msg.sender, _nftAddr, _tokenId);\\n\\t}\\n\\n\\tfunction update(\\n\\t\\taddress _nftAddr,\\n\\t\\tuint256 _tokenId,\\n\\t\\tuint256 _newPrice\\n\\t) public {\\n\\t\\tif (_newPrice <= 0) {\\n\\t\\t\\trevert InvalidPrice();\\n\\t\\t}\\n\\t\\tOrder storage _order = nftList[_nftAddr][_tokenId];\\n\\t\\tif (_order.owner != msg.sender) {\\n\\t\\t\\trevert NotOwner();\\n\\t\\t}\\n\\n\\t\\tIERC721 _nft = IERC721(_nftAddr);\\n\\t\\tif (_nft.ownerOf(_tokenId) != address(this)) {\\n\\t\\t\\trevert InvalidOrder();\\n\\t\\t}\\n\\n\\t\\t_order.price = _newPrice;\\n\\n\\t\\temit Update(msg.sender, _nftAddr, _tokenId, _newPrice);\\n\\t}\\n\\n\\tfunction onERC721Received(\\n\\t\\taddress,\\n\\t\\taddress,\\n\\t\\tuint256,\\n\\t\\tbytes memory\\n\\t) public virtual override returns (bytes4) {\\n\\t\\treturn this.onERC721Received.selector;\\n\\t}\\n}\\n\",\"keccak256\":\"0xcef886fa42b8fa3be350e7e54e74e4a08658e4a101b1fe8cd24a8e5f48e2a6a2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ac2806100206000396000f3fe6080604052600436106100565760003560e01c8063150b7a021461005f5780638de93222146100a8578063ba5f4fb2146100bb578063d09b6d4314610122578063dda342bb14610142578063eac449d91461016257005b3661005d57005b005b34801561006b57600080fd5b5061008a61007a366004610900565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61005d6100b63660046109e0565b610182565b3480156100c757600080fd5b506101036100d63660046109e0565b6000602081815292815260408082209093529081522080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520161009f565b34801561012e57600080fd5b5061005d61013d366004610a0c565b61044c565b34801561014e57600080fd5b5061005d61015d366004610a0c565b610597565b34801561016e57600080fd5b5061005d61017d3660046109e0565b61072e565b6001600160a01b038216600090815260208181526040808320848452909152902060018101546101c45760405162bfc92160e01b815260040160405180910390fd5b80600101543410156101e95760405163651de9c360e01b815260040160405180910390fd5b6040516331a9108f60e11b815260048101839052839030906001600160a01b03831690636352211e90602401602060405180830381865afa158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190610a41565b6001600160a01b03161461027d5760405163af61069360e01b815260040160405180910390fd5b604051632142170760e11b8152306004820152336024820152604481018490526001600160a01b038216906342842e0e90606401600060405180830381600087803b1580156102cb57600080fd5b505af11580156102df573d6000803e3d6000fd5b505083546001850154604051600094506001600160a01b039092169250908381818185875af1925050503d8060008114610335576040519150601f19603f3d011682016040523d82523d6000602084013e61033a565b606091505b505090508061035c576040516312171d8360e31b815260040160405180910390fd5b600183015460009033906103709034610a65565b604051600081818185875af1925050503d80600081146103ac576040519150601f19603f3d011682016040523d82523d6000602084013e6103b1565b606091505b50509050806103d3576040516312171d8360e31b815260040160405180910390fd5b6001600160a01b038616600081815260208181526040808320898452825280832080546001600160a01b031916815560019081019390935591870154915191825287929133917f46661dab58311a6838247afecbee792192b4f27fc8b3e7168c66bc55ec2e404e910160405180910390a4505050505050565b6000811161046c5760405162bfc92160e01b815260040160405180910390fd5b6001600160a01b038084166000908152602081815260408083208684529091529020805490911633146104b2576040516330cd747160e01b815260040160405180910390fd5b6040516331a9108f60e11b815260048101849052849030906001600160a01b03831690636352211e90602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610a41565b6001600160a01b0316146105465760405163af61069360e01b815260040160405180910390fd5b6001820183905560405183815284906001600160a01b0387169033907fb7f0ca7cd5b24651672216886135b99ff40342bcf549009a4c6fc74f059fb9a0906020015b60405180910390a45050505050565b60405163020604bf60e21b815260048101839052839030906001600160a01b0383169063081812fc90602401602060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610a41565b6001600160a01b03161461062b5760405163c7e649ff60e01b815260040160405180910390fd5b6000821161064b5760405162bfc92160e01b815260040160405180910390fd5b6001600160a01b038481166000908152602081815260408083208784529091529081902080546001600160a01b031916339081178255600182018690559151632142170760e11b8152600481019290925230602483015260448201869052918316906342842e0e90606401600060405180830381600087803b1580156106d057600080fd5b505af11580156106e4573d6000803e3d6000fd5b5050505083856001600160a01b0316336001600160a01b03167fedbdf022944a3291f4b30148903a84720506f48e10478ec5812e5caf30e1fab08660405161058891815260200190565b6001600160a01b03808316600090815260208181526040808320858452909152902080549091163314610774576040516330cd747160e01b815260040160405180910390fd5b6040516331a9108f60e11b815260048101839052839030906001600160a01b03831690636352211e90602401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e19190610a41565b6001600160a01b0316146108085760405163af61069360e01b815260040160405180910390fd5b604051632142170760e11b8152306004820152336024820152604481018490526001600160a01b038216906342842e0e90606401600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b5050506001600160a01b03851660008181526020818152604080832088845290915280822080546001600160a01b03191681556001018290555186935033917fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b91a450505050565b6001600160a01b03811681146108e757600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561091657600080fd5b8435610921816108d2565b93506020850135610931816108d2565b925060408501359150606085013567ffffffffffffffff8082111561095557600080fd5b818701915087601f83011261096957600080fd5b81358181111561097b5761097b6108ea565b604051601f8201601f19908116603f011681019083821181831017156109a3576109a36108ea565b816040528281528a60208487010111156109bc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156109f357600080fd5b82356109fe816108d2565b946020939093013593505050565b600080600060608486031215610a2157600080fd5b8335610a2c816108d2565b95602085013595506040909401359392505050565b600060208284031215610a5357600080fd5b8151610a5e816108d2565b9392505050565b81810381811115610a8657634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f758a7ec5776c4e032010779cd95a763a277f4afb1f927254b9fcd55c5867be164736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100565760003560e01c8063150b7a021461005f5780638de93222146100a8578063ba5f4fb2146100bb578063d09b6d4314610122578063dda342bb14610142578063eac449d91461016257005b3661005d57005b005b34801561006b57600080fd5b5061008a61007a366004610900565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b61005d6100b63660046109e0565b610182565b3480156100c757600080fd5b506101036100d63660046109e0565b6000602081815292815260408082209093529081522080546001909101546001600160a01b039091169082565b604080516001600160a01b03909316835260208301919091520161009f565b34801561012e57600080fd5b5061005d61013d366004610a0c565b61044c565b34801561014e57600080fd5b5061005d61015d366004610a0c565b610597565b34801561016e57600080fd5b5061005d61017d3660046109e0565b61072e565b6001600160a01b038216600090815260208181526040808320848452909152902060018101546101c45760405162bfc92160e01b815260040160405180910390fd5b80600101543410156101e95760405163651de9c360e01b815260040160405180910390fd5b6040516331a9108f60e11b815260048101839052839030906001600160a01b03831690636352211e90602401602060405180830381865afa158015610232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102569190610a41565b6001600160a01b03161461027d5760405163af61069360e01b815260040160405180910390fd5b604051632142170760e11b8152306004820152336024820152604481018490526001600160a01b038216906342842e0e90606401600060405180830381600087803b1580156102cb57600080fd5b505af11580156102df573d6000803e3d6000fd5b505083546001850154604051600094506001600160a01b039092169250908381818185875af1925050503d8060008114610335576040519150601f19603f3d011682016040523d82523d6000602084013e61033a565b606091505b505090508061035c576040516312171d8360e31b815260040160405180910390fd5b600183015460009033906103709034610a65565b604051600081818185875af1925050503d80600081146103ac576040519150601f19603f3d011682016040523d82523d6000602084013e6103b1565b606091505b50509050806103d3576040516312171d8360e31b815260040160405180910390fd5b6001600160a01b038616600081815260208181526040808320898452825280832080546001600160a01b031916815560019081019390935591870154915191825287929133917f46661dab58311a6838247afecbee792192b4f27fc8b3e7168c66bc55ec2e404e910160405180910390a4505050505050565b6000811161046c5760405162bfc92160e01b815260040160405180910390fd5b6001600160a01b038084166000908152602081815260408083208684529091529020805490911633146104b2576040516330cd747160e01b815260040160405180910390fd5b6040516331a9108f60e11b815260048101849052849030906001600160a01b03831690636352211e90602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610a41565b6001600160a01b0316146105465760405163af61069360e01b815260040160405180910390fd5b6001820183905560405183815284906001600160a01b0387169033907fb7f0ca7cd5b24651672216886135b99ff40342bcf549009a4c6fc74f059fb9a0906020015b60405180910390a45050505050565b60405163020604bf60e21b815260048101839052839030906001600160a01b0383169063081812fc90602401602060405180830381865afa1580156105e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106049190610a41565b6001600160a01b03161461062b5760405163c7e649ff60e01b815260040160405180910390fd5b6000821161064b5760405162bfc92160e01b815260040160405180910390fd5b6001600160a01b038481166000908152602081815260408083208784529091529081902080546001600160a01b031916339081178255600182018690559151632142170760e11b8152600481019290925230602483015260448201869052918316906342842e0e90606401600060405180830381600087803b1580156106d057600080fd5b505af11580156106e4573d6000803e3d6000fd5b5050505083856001600160a01b0316336001600160a01b03167fedbdf022944a3291f4b30148903a84720506f48e10478ec5812e5caf30e1fab08660405161058891815260200190565b6001600160a01b03808316600090815260208181526040808320858452909152902080549091163314610774576040516330cd747160e01b815260040160405180910390fd5b6040516331a9108f60e11b815260048101839052839030906001600160a01b03831690636352211e90602401602060405180830381865afa1580156107bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e19190610a41565b6001600160a01b0316146108085760405163af61069360e01b815260040160405180910390fd5b604051632142170760e11b8152306004820152336024820152604481018490526001600160a01b038216906342842e0e90606401600060405180830381600087803b15801561085657600080fd5b505af115801561086a573d6000803e3d6000fd5b5050506001600160a01b03851660008181526020818152604080832088845290915280822080546001600160a01b03191681556001018290555186935033917fb698e31a2abee5824d0d7bcfd2339aead7f9e9ae413fba50bf554ff3fa470b7b91a450505050565b6001600160a01b03811681146108e757600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561091657600080fd5b8435610921816108d2565b93506020850135610931816108d2565b925060408501359150606085013567ffffffffffffffff8082111561095557600080fd5b818701915087601f83011261096957600080fd5b81358181111561097b5761097b6108ea565b604051601f8201601f19908116603f011681019083821181831017156109a3576109a36108ea565b816040528281528a60208487010111156109bc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156109f357600080fd5b82356109fe816108d2565b946020939093013593505050565b600080600060608486031215610a2157600080fd5b8335610a2c816108d2565b95602085013595506040909401359392505050565b600060208284031215610a5357600080fd5b8151610a5e816108d2565b9392505050565b81810381811115610a8657634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220f758a7ec5776c4e032010779cd95a763a277f4afb1f927254b9fcd55c5867be164736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 163,
        "contract": "contracts/NFTExchangePlatform.sol:NFTExchangePlatform",
        "label": "nftList",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)156_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Order)156_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct NFTExchangePlatform.Order))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Order)156_storage)"
      },
      "t_mapping(t_uint256,t_struct(Order)156_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct NFTExchangePlatform.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)156_storage"
      },
      "t_struct(Order)156_storage": {
        "encoding": "inplace",
        "label": "struct NFTExchangePlatform.Order",
        "members": [
          {
            "astId": 153,
            "contract": "contracts/NFTExchangePlatform.sol:NFTExchangePlatform",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 155,
            "contract": "contracts/NFTExchangePlatform.sol:NFTExchangePlatform",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}